# Import the portscanner module
import portscanner

# Get user input for the target IP, number of ports, and path to the file with vulnerable software information
targets_ip = input("[+] * Enter Target to Scan for Vulnerable Open Ports: ")
port_number = int(input("[+] * Enter Amount of Ports You Want to Scan: "))
vul_file = input("[+] * Enter Path to The File With Vulnerable Software's: ")

# Create an instance of the PortScan class from the portscanner module
target = portscanner.PortScan(targets_ip, port_number)

# Initiate the port scanning process
target.scan()

# Open the file with vulnerable software information
with open(vul_file, 'r') as file:
    count = 0
    # Loop through each banner detected during the port scan
    for banner in target.banners:
        file.seek(0)  # Reset the file pointer to the beginning
        # Iterate through each line in the vulnerable software file
        for line in file.readlines():
            # Compare the lines of vulnerable banners in the file with the banners from the current scan
            if line.strip() in banner:
                # If there's a match, print a message indicating a vulnerable port
                print(f'[!!] VULNERABLE BANNER {banner} ON PORT {target.open_ports[count]} ')
        count += 1  # Move to the next port

